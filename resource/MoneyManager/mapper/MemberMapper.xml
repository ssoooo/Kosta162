<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GeneralAffairs.store.mapper.MemberMapper">

	<insert id="registMember" parameterType="Member">
		INSERT INTO
		member_table(memberId,password,nickname,name,email,account,phoneNumber)
		VALUES(#{memberId},#{password},#{nickname},#{name},#{email},#{account},#{phoneNumber})
	</insert>

	<update id="updateMember" parameterType="Member">
		UPDATE
		member_table SET
		password=#{password},
		nickname=#{nickname},
		name=#{name},
		email=#{email},
		account=#{account},
		phoneNumber=#{phoneNumber}
		WHERE
		memberId=#{memberId}
	</update>

	<delete id="deleteMember" parameterType="String">
		DELETE FROM member_table
		WHERE memberId=#{memberId}
	</delete>

	<select id="retrieveMemberById" parameterType="String" resultType="Member">
		SELECT memberId,password,nickname,name,email,account,phoneNumber
		FROM member_table
		WHERE memberId=#{memberId}
	</select>

	<select id="retrieveAllMembersByGroup" parameterType="int"
		resultType="Member">
		SELECT m.memberId, m.password, m.nickname, m.name,
		m.email,m.account,m.phoneNumber
		FROM member_table m, groupMember_table g
		WHERE m.memberId=g.memberId and groupId=#{groupId}
	</select>

	<select id="retrieveAllMembersExceptManager" parameterType="map"
		resultType="Member">
		select memberId
		from groupMember_table
		where
		groupId=#{groupId}
		MINUS
		select memberId
		from event_table
		where
		groupId=#{groupId}
	</select>

	<select id="retrieveAllMembersExceptEventMembers" parameterType="int"
		resultType="Member">
		select memberId
		from groupMember_table
		where
		groupId=#{groupId}
		MINUS
		select memberId
		from eventMember_table
		where
		eventId = #{eventId}
	</select>

	<select id="retrieveMembersByEvent" parameterType="int"
		resultType="Member">
		<!-- select memberId from eventMember_table where eventId=#{eventId} -->
		SELECT m.memberId, m.password, m.nickname, m.name, m.email,
		m.account,m.phoneNumber
		FROM member_table m, eventMember_table e
		WHERE
		m.memberId=e.memberId and e.eventId=#{eventId}
	</select>

	<select id="retrieveMembersNoEvent" parameterType="int"
		resultType="Member">
		select memberId
		from groupMember_table
		where
		groupId=#{groupId}
		MINUS
		select memberId
		from eventMember_table
		where
		eventId=#{eventId}
	</select>

	<select id="retrieveAllUnPaidMembers" parameterType="map"
		resultType="Member">
		select eventId, memberId, payment
		from eventMember_table
		where eventId=
		#{eventId} AND payment='미납'
	</select>

	<select id="retrieveAllPaidMembers" parameterType="map"
		resultType="Member">
		<![CDATA[select eventId, memberId, payment
		from eventMember_table
		where eventId= #{eventId} AND payment <> '미납'
		]]>
	</select>

	<update id="updateGrade" parameterType="map">
		UPDATE groupMember_table
		SET
		grade=#{grade}
		WHERE memberId=#{memberId} AND groupId=#{groupId}
	</update>

	<select id="retrieveAllSignInGroupReq" parameterType="int"
		resultType="Member">
		SELECT groupId,memberId,regDate
		FROM request_table
		WHERE
		groupId=#{groupId}
	</select>

	<insert id="registReqSignInMember" parameterType="map">
		INSERT INTO
		request_table(groupId,memberId,regDate)
		VALUES(#{groupId},#{memberId},sysDate)
	</insert>

	<delete id="deleteSignInGroupReq" parameterType="map">
		DELETE FROM
		request_table
		WHERE memberId=#{memberId} AND groupId=#{groupId}
	</delete>

	<select id="checkMemberHasGroup" parameterType="String"
		resultType="int">
		SELECT groupId
		FROM groupMember_table
		WHERE
		memberId=#{memberId}
	</select>

</mapper>